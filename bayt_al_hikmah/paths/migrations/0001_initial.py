# Generated by Django 5.2 on 2025-06-03 13:52

import django.db.models.deletion
import wagtail.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("wagtailcore", "0094_alter_page_locale"),
        ("wagtailimages", "0027_image_description"),
    ]

    operations = [
        migrations.CreateModel(
            name="LearningPath",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, help_text="Date created"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, help_text="Last update"),
                ),
                (
                    "headline",
                    models.CharField(
                        db_index=True,
                        help_text="Learning Path headline",
                        max_length=128,
                    ),
                ),
                (
                    "description",
                    wagtail.fields.StreamField(
                        [("heading", 0), ("paragraph", 1)],
                        block_lookup={
                            0: (
                                "wagtail.blocks.CharBlock",
                                (),
                                {"form_classname": "title", "help_text": "Heading"},
                            ),
                            1: (
                                "wagtail.blocks.RichTextBlock",
                                (),
                                {"help_text": "Rich Text"},
                            ),
                        },
                        help_text="Learning Path description",
                    ),
                ),
                (
                    "prerequisites",
                    wagtail.fields.StreamField(
                        [("heading", 0), ("description", 1), ("prerequisites", 3)],
                        blank=True,
                        block_lookup={
                            0: (
                                "wagtail.blocks.CharBlock",
                                (),
                                {"form_classname": "title", "help_text": "Title"},
                            ),
                            1: (
                                "wagtail.blocks.RichTextBlock",
                                (),
                                {"help_text": "Description"},
                            ),
                            2: (
                                "bayt_al_hikmah.ui.cms.blocks.PathChooserBlock",
                                (),
                                {},
                            ),
                            3: (
                                "wagtail.blocks.ListBlock",
                                (2,),
                                {
                                    "help_text": "Required learning paths to be accomplished"
                                },
                            ),
                        },
                        help_text="Learning Path prerequisites",
                        null=True,
                    ),
                ),
                (
                    "duration",
                    models.DurationField(
                        blank=True, help_text="Learning Path duration", null=True
                    ),
                ),
                (
                    "rating",
                    models.FloatField(
                        blank=True,
                        db_index=True,
                        help_text="Learning Path rating",
                        null=True,
                    ),
                ),
                (
                    "image",
                    models.ForeignKey(
                        help_text="Learning Path image",
                        on_delete=django.db.models.deletion.PROTECT,
                        to="wagtailimages.image",
                    ),
                ),
            ],
            options={
                "verbose_name": "Learning path",
            },
            bases=("wagtailcore.page", models.Model),
        ),
    ]
